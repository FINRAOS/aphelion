{"version":3,"sources":["../src/renderer.js"],"names":["_","moment","kbn","TableRenderer","panel","table","isUtc","sanitize","templateSrv","initColumns","formatters","colorState","colIndex","columns","length","column","title","text","i","styles","style","regex","stringToJsRegex","pattern","match","alias","replace","createColumnFormatter","value","thresholds","Number","colors","v","undefined","isArray","join","escape","defaultCellFormatter","type","date","utc","format","dateFormat","textMappings","colorMode","mapping","getColorForValue","valueFormatter","valueFormats","unit","isString","decimals","rowIndex","scopedVars","cell_variable","row","rows","columnIndex","addWidthHack","formatColumnValue","cellClasses","cellClass","cell","columnHtml","hidden","preserveFormat","push","link","renderRowVariables","cellLink","linkUrl","cellLinkTooltip","linkTooltip","cellTarget","linkTargetBlank","filterable","page","pageSize","startPos","endPos","Math","min","html","y","cellHtml","rowStyle","renderCell","new_row"],"mappings":";;;;;;;;;;;;;;;AACOA,a;;AACAC,kB;;AACAC,e;;;;;;;;;;;;;;;;;;;;;qCAEMC,a;AACT,uCAAYC,KAAZ,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,WAA1C,EAAuD;AAAA;;AACnD,yBAAKJ,KAAL,GAAaA,KAAb;AACA,yBAAKC,KAAL,GAAaA,KAAb;AACA,yBAAKC,KAAL,GAAaA,KAAb;AACA,yBAAKC,QAAL,GAAgBA,QAAhB;AACA,yBAAKC,WAAL,GAAmBA,WAAnB;AACA,yBAAKC,WAAL;AACH;;;;6CAEQJ,K,EAAO;AACZ,6BAAKA,KAAL,GAAaA,KAAb;AACA,6BAAKI,WAAL;AACH;;;kDAEa;AACV,6BAAKC,UAAL,GAAkB,EAAlB;AACA,6BAAKC,UAAL,GAAkB,EAAlB;;AAEA,4BAAG,KAAKN,KAAR,EAAe;AACX,iCAAK,IAAIO,WAAW,CAApB,EAAuBA,WAAW,KAAKP,KAAL,CAAWQ,OAAX,CAAmBC,MAArD,EAA6DF,UAA7D,EAAyE;AACrE,oCAAIG,SAAS,KAAKV,KAAL,CAAWQ,OAAX,CAAmBD,QAAnB,CAAb;AACAG,uCAAOC,KAAP,GAAeD,OAAOE,IAAtB;AACA,oCAAG,KAAKb,KAAR,EAAe;AACX,yCAAK,IAAIc,IAAI,CAAb,EAAgBA,IAAI,KAAKd,KAAL,CAAWe,MAAX,CAAkBL,MAAtC,EAA8CI,GAA9C,EAAmD;AAC/C,4CAAIE,QAAQ,KAAKhB,KAAL,CAAWe,MAAX,CAAkBD,CAAlB,CAAZ;;AAEA,4CAAIG,QAAQnB,IAAIoB,eAAJ,CAAoBF,MAAMG,OAA1B,CAAZ;AACA,4CAAIR,OAAOE,IAAP,CAAYO,KAAZ,CAAkBH,KAAlB,CAAJ,EAA8B;AAC1BN,mDAAOK,KAAP,GAAeA,KAAf;;AAEA,gDAAIA,MAAMK,KAAV,EAAiB;AACbV,uDAAOC,KAAP,GAAeD,OAAOE,IAAP,CAAYS,OAAZ,CAAoBL,KAApB,EAA2BD,MAAMK,KAAjC,CAAf;AACH;;AAED;AACH;AACJ;AACJ;AACD,qCAAKf,UAAL,CAAgBE,QAAhB,IAA4B,KAAKe,qBAAL,CAA2BZ,MAA3B,CAA5B;AACH;AACJ;AACJ;;;qDAEgBa,K,EAAOR,K,EAAO;AAC3B,4BAAI,CAACA,MAAMS,UAAX,EAAuB;AAAE,mCAAO,IAAP;AAAc;;AAEvCD,gCAAQE,OAAOF,KAAP,CAAR;AACA,6BAAK,IAAIV,IAAIE,MAAMS,UAAN,CAAiBf,MAA9B,EAAsCI,IAAI,CAA1C,EAA6CA,GAA7C,EAAkD;AAC9C,gCAAIU,SAASE,OAAOV,MAAMS,UAAN,CAAiBX,IAAI,CAArB,CAAP,CAAb,EAA8C;AAC1C,uCAAOE,MAAMW,MAAN,CAAab,CAAb,CAAP;AACH;AACJ;AACD,+BAAOE,MAAMW,MAAN,CAAa,CAAb,CAAP;AACH;;;yDAEoBC,C,EAAGZ,K,EAAO;AAC3B,4BAAIY,MAAM,IAAN,IAAcA,MAAM,KAAK,CAAzB,IAA8BA,MAAMC,SAAxC,EAAmD;AAC/C,mCAAO,EAAP;AACH;;AAED,4BAAIjC,EAAEkC,OAAF,CAAUF,CAAV,CAAJ,EAAkB;AACdA,gCAAIA,EAAEG,IAAF,CAAO,IAAP,CAAJ;AACH;;AAED,4BAAIf,SAASA,MAAMb,QAAnB,EAA6B;AACzB,mCAAO,KAAKA,QAAL,CAAcyB,CAAd,CAAP;AACH,yBAFD,MAEO;AACH,mCAAOhC,EAAEoC,MAAF,CAASJ,CAAT,CAAP;AACH;AACJ;;;0DAEqBjB,M,EAAQ;AAAA;;AAC1B,4BAAI,CAACA,OAAOK,KAAZ,EAAmB;AACf,mCAAO,KAAKiB,oBAAZ;AACH;;AAED,4BAAItB,OAAOK,KAAP,CAAakB,IAAb,KAAsB,QAA1B,EAAoC;AAChC,mCAAO,aAAK;AACR,uCAAOL,SAAP;AACH,6BAFD;AAGH;;AAED,4BAAIlB,OAAOK,KAAP,CAAakB,IAAb,KAAsB,MAA1B,EAAkC;AAC9B,mCAAO,aAAK;AACR,oCAAIN,MAAMC,SAAN,IAAmBD,MAAM,IAA7B,EAAmC;AAC/B,2CAAO,GAAP;AACH;;AAED,oCAAIhC,EAAEkC,OAAF,CAAUF,CAAV,CAAJ,EAAkB;AAAEA,wCAAIA,EAAE,CAAF,CAAJ;AAAW;AAC/B,oCAAIO,OAAOtC,OAAO+B,CAAP,CAAX;AACA,oCAAI,MAAK1B,KAAT,EAAgB;AACZiC,2CAAOA,KAAKC,GAAL,EAAP;AACH;AACD,uCAAOD,KAAKE,MAAL,CAAY1B,OAAOK,KAAP,CAAasB,UAAzB,CAAP;AACH,6BAXD;AAYH;;AAED,4BAAI3B,OAAOK,KAAP,CAAakB,IAAb,KAAsB,QAA1B,EAAoC;AAChC,mCAAO,aAAM;AACT,oCAAIN,MAAM,IAAV,EAAgB;AACZ,2CAAO,GAAP;AACH;;AAED,oCAAIjB,OAAOK,KAAP,CAAauB,YAAb,IAA6B5B,OAAOK,KAAP,CAAawB,SAA9C,EAAyD;AACrD,yCAAK,IAAI1B,IAAI,CAAb,EAAgBA,IAAIH,OAAOK,KAAP,CAAauB,YAAb,CAA0B7B,MAA9C,EAAsDI,GAAtD,EAA2D;AACvD,4CAAI2B,UAAU9B,OAAOK,KAAP,CAAauB,YAAb,CAA0BzB,CAA1B,CAAd;AACA,4CAAIG,QAAQnB,IAAIoB,eAAJ,CAAoBuB,QAAQ5B,IAA5B,CAAZ;AACA,4CAAIe,EAAER,KAAF,CAAQH,KAAR,CAAJ,EAAoB;AAChB,kDAAKV,UAAL,CAAgBI,OAAOK,KAAP,CAAawB,SAA7B,IAA0C,MAAKE,gBAAL,CAAsBD,QAAQjB,KAA9B,EAAqCb,OAAOK,KAA5C,CAA1C;AACA;AACH;AACJ;AACJ;;AAED,uCAAO,MAAKiB,oBAAL,CAA0BL,CAA1B,EAA6BjB,OAAOK,KAApC,CAAP;AACH,6BAjBD;AAkBH;;AAED,4BAAIL,OAAOK,KAAP,CAAakB,IAAb,KAAsB,QAA1B,EAAoC;AAChC,gCAAIS,iBAAiB7C,IAAI8C,YAAJ,CAAiBjC,OAAOkC,IAAP,IAAelC,OAAOK,KAAP,CAAa6B,IAA7C,CAArB;;AAEA,mCAAO,aAAM;AACT,oCAAIjB,MAAM,IAAN,IAAcA,MAAM,KAAK,CAA7B,EAAgC;AAC5B,2CAAO,GAAP;AACH;;AAED,oCAAIhC,EAAEkD,QAAF,CAAWlB,CAAX,CAAJ,EAAmB;AACf,2CAAO,MAAKK,oBAAL,CAA0BL,CAA1B,EAA6BjB,OAAOK,KAApC,CAAP;AACH;;AAED,oCAAIL,OAAOK,KAAP,CAAawB,SAAjB,EAA4B;AACxB,0CAAKjC,UAAL,CAAgBI,OAAOK,KAAP,CAAawB,SAA7B,IAA0C,MAAKE,gBAAL,CAAsBd,CAAtB,EAAyBjB,OAAOK,KAAhC,CAA1C;AACH;;AAED,uCAAO2B,eAAef,CAAf,EAAkBjB,OAAOK,KAAP,CAAa+B,QAA/B,EAAyC,IAAzC,CAAP;AACH,6BAdD;AAeH;;AAED,+BAAO,UAACvB,KAAD,EAAW;AACd,mCAAO,MAAKS,oBAAL,CAA0BT,KAA1B,EAAiCb,OAAOK,KAAxC,CAAP;AACH,yBAFD;AAGH;;;uDAEkBgC,Q,EAAU;AACzB,4BAAIC,aAAa,EAAjB;AACA,4BAAIC,sBAAJ;AACA,4BAAIC,MAAM,KAAKlD,KAAL,CAAWmD,IAAX,CAAgBJ,QAAhB,CAAV;AACA,6BAAK,IAAIlC,IAAI,CAAb,EAAgBA,IAAIqC,IAAIzC,MAAxB,EAAgCI,GAAhC,EAAqC;AACjCoC,wDAA0BpC,CAA1B;AACAmC,uCAAWC,aAAX,IAA4B,EAAE1B,OAAO2B,IAAIrC,CAAJ,CAAT,EAA5B;AACH;AACD,+BAAOmC,UAAP;AACH;;;sDAEiBzC,Q,EAAUgB,K,EAAO;AAC/B,+BAAO,KAAKlB,UAAL,CAAgBE,QAAhB,IAA4B,KAAKF,UAAL,CAAgBE,QAAhB,EAA0BgB,KAA1B,CAA5B,GAA+DA,KAAtE;AACH;;;+CAEU6B,W,EAAaL,Q,EAAUxB,K,EAA6B;AAAA,4BAAtB8B,YAAsB,uEAAP,KAAO;;AAC3D9B,gCAAQ,KAAK+B,iBAAL,CAAuBF,WAAvB,EAAoC7B,KAApC,CAAR;;AAEA,4BAAIb,SAAS,KAAKV,KAAL,CAAWQ,OAAX,CAAmB4C,WAAnB,CAAb;AACA,4BAAIrC,QAAQ,EAAZ;AACA,4BAAIwC,cAAc,EAAlB;AACA,4BAAIC,YAAY,EAAhB;;AAEA,4BAAI,KAAKlD,UAAL,CAAgBmD,IAApB,EAA0B;AACtB1C,oCAAQ,8BAA8B,KAAKT,UAAL,CAAgBmD,IAA9C,GAAqD,gBAA7D;AACA,iCAAKnD,UAAL,CAAgBmD,IAAhB,GAAuB,IAAvB;AACH,yBAHD,MAGO,IAAI,KAAKnD,UAAL,CAAgBiB,KAApB,EAA2B;AAC9BR,oCAAQ,mBAAmB,KAAKT,UAAL,CAAgBiB,KAAnC,GAA2C,GAAnD;AACA,iCAAKjB,UAAL,CAAgBiB,KAAhB,GAAwB,IAAxB;AACH;;AAED;AACA;AACA;AACA,4BAAImC,aAAa,EAAjB;AACA,4BAAIL,YAAJ,EAAkB;AACdK,yCAAa,yCAAyC,KAAK1D,KAAL,CAAWQ,OAAX,CAAmB4C,WAAnB,EAAgCzC,KAAzE,GAAiF,QAA9F;AACH;;AAED,4BAAIY,UAAUK,SAAd,EAAyB;AACrBb,oCAAQ,wBAAR;AACAL,mCAAOiD,MAAP,GAAgB,IAAhB;AACH,yBAHD,MAGO;AACHjD,mCAAOiD,MAAP,GAAgB,KAAhB;AACH;;AAED,4BAAIjD,OAAOK,KAAP,IAAgBL,OAAOK,KAAP,CAAa6C,cAAjC,EAAiD;AAC7CL,wCAAYM,IAAZ,CAAiB,sBAAjB;AACH;;AAED,4BAAInD,OAAOK,KAAP,IAAgBL,OAAOK,KAAP,CAAa+C,IAAjC,EAAuC;AACnC;AACA,gCAAId,aAAa,KAAKe,kBAAL,CAAwBhB,QAAxB,CAAjB;AACAC,uCAAW,QAAX,IAAuB,EAAEzB,OAAOA,KAAT,EAAvB;;AAEA,gCAAIyC,WAAW,KAAK7D,WAAL,CAAiBkB,OAAjB,CAAyBX,OAAOK,KAAP,CAAakD,OAAtC,EAA+CjB,UAA/C,CAAf;AACA,gCAAIkB,kBAAkB,KAAK/D,WAAL,CAAiBkB,OAAjB,CAAyBX,OAAOK,KAAP,CAAaoD,WAAtC,EAAmDnB,UAAnD,CAAtB;AACA,gCAAIoB,aAAa1D,OAAOK,KAAP,CAAasD,eAAb,GAA+B,QAA/B,GAA0C,EAA3D;;AAEAd,wCAAYM,IAAZ,CAAiB,uBAAjB;AACAH,kEACOM,QADP,kBAC4BI,UAD5B,iDACkFF,eADlF,6CAEA3C,KAFA;AAKH,yBAfD,MAeO;AACHmC,0CAAcnC,KAAd;AACH;;AAED,4BAAIb,OAAO4D,UAAX,EAAuB;AACnBf,wCAAYM,IAAZ,CAAiB,6BAAjB;AACAH,mMAEWX,QAFX,uBAEqCK,WAFrC,6OAMWL,QANX,uBAMqCK,WANrC;AASH;;AAED,4BAAIG,YAAY9C,MAAhB,EAAwB;AACpB+C,wCAAY,aAAaD,YAAYzB,IAAZ,CAAiB,GAAjB,CAAb,GAAqC,GAAjD;AACH;;AAED4B,qCAAa,QAAQF,SAAR,GAAoBzC,KAApB,GAA4B,GAA5B,GAAkC2C,UAAlC,GAA+C,OAA5D;AACA,+BAAOA,UAAP;AACH;;;2CAEMa,I,EAAM;AACT,4BAAG,KAAKxE,KAAR,EAAe;AACX,gCAAIyE,WAAW,KAAKzE,KAAL,CAAWyE,QAAX,IAAuB,GAAtC;AACA,gCAAIC,WAAWF,OAAOC,QAAtB;AACA,gCAAIE,SAASC,KAAKC,GAAL,CAASH,WAAWD,QAApB,EAA8B,KAAKxE,KAAL,CAAWmD,IAAX,CAAgB1C,MAA9C,CAAb;AACA,gCAAIoE,OAAO,EAAX;;AAEA,iCAAK,IAAIC,IAAIL,QAAb,EAAuBK,IAAIJ,MAA3B,EAAmCI,GAAnC,EAAwC;AACpC,oCAAI5B,MAAM,KAAKlD,KAAL,CAAWmD,IAAX,CAAgB2B,CAAhB,CAAV;AACA,oCAAIC,WAAW,EAAf;AACA,oCAAIC,WAAW,EAAf;AACA,qCAAK,IAAInE,IAAI,CAAb,EAAgBA,IAAI,KAAKb,KAAL,CAAWQ,OAAX,CAAmBC,MAAvC,EAA+CI,GAA/C,EAAoD;AAChDkE,gDAAY,KAAKE,UAAL,CAAgBpE,CAAhB,EAAmBiE,CAAnB,EAAsB5B,IAAIrC,CAAJ,CAAtB,EAA8BiE,MAAML,QAApC,CAAZ;AACH;;AAED,oCAAI,KAAKnE,UAAL,CAAgB4C,GAApB,EAAyB;AACrB8B,+CAAW,8BAA8B,KAAK1E,UAAL,CAAgB4C,GAA9C,GAAoD,gBAA/D;AACA,yCAAK5C,UAAL,CAAgB4C,GAAhB,GAAsB,IAAtB;AACH;;AAED2B,wCAAQ,SAASG,QAAT,GAAoB,GAApB,GAA0BD,QAA1B,GAAqC,OAA7C;AACH;AACJ;AACD,+BAAOF,IAAP;AACH;;;oDAEe;AACZ,4BAAI1B,OAAO,EAAX;;AAEA,6BAAK,IAAI2B,IAAI,CAAb,EAAgBA,IAAI,KAAK9E,KAAL,CAAWmD,IAAX,CAAgB1C,MAApC,EAA4CqE,GAA5C,EAAiD;AAC7C,gCAAI5B,MAAM,KAAKlD,KAAL,CAAWmD,IAAX,CAAgB2B,CAAhB,CAAV;AACA,gCAAII,UAAU,EAAd;AACA,iCAAK,IAAIrE,IAAI,CAAb,EAAgBA,IAAI,KAAKb,KAAL,CAAWQ,OAAX,CAAmBC,MAAvC,EAA+CI,GAA/C,EAAoD;AAChDqE,wCAAQrB,IAAR,CAAa,KAAKP,iBAAL,CAAuBzC,CAAvB,EAA0BqC,IAAIrC,CAAJ,CAA1B,CAAb;AACH;AACDsC,iCAAKU,IAAL,CAAUqB,OAAV;AACH;AACD,+BAAO;AACH1E,qCAAS,KAAKR,KAAL,CAAWQ,OADjB;AAEH2C,kCAAMA;AAFH,yBAAP;AAIH","file":"renderer.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\nimport _ from 'lodash';\nimport moment from 'moment';\nimport kbn from '/public/app/core/utils/kbn';\n\nexport class TableRenderer {\n    constructor(panel,table, isUtc, sanitize, templateSrv) {\n        this.panel = panel;\n        this.table = table;\n        this.isUtc = isUtc;\n        this.sanitize = sanitize;\n        this.templateSrv = templateSrv;\n        this.initColumns();\n    }\n\n    setTable(table) {\n        this.table = table;\n        this.initColumns();\n    }\n\n    initColumns() {\n        this.formatters = [];\n        this.colorState = {};\n\n        if(this.table) {\n            for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n                let column = this.table.columns[colIndex];\n                column.title = column.text;\n                if(this.panel) {\n                    for (let i = 0; i < this.panel.styles.length; i++) {\n                        let style = this.panel.styles[i];\n\n                        var regex = kbn.stringToJsRegex(style.pattern);\n                        if (column.text.match(regex)) {\n                            column.style = style;\n\n                            if (style.alias) {\n                                column.title = column.text.replace(regex, style.alias);\n                            }\n\n                            break;\n                        }\n                    }\n                }\n                this.formatters[colIndex] = this.createColumnFormatter(column);\n            }\n        }\n    }\n\n    getColorForValue(value, style) {\n        if (!style.thresholds) { return null; }\n\n        value = Number(value);\n        for (var i = style.thresholds.length; i > 0; i--) {\n            if (value >= Number(style.thresholds[i - 1])) {\n                return style.colors[i];\n            }\n        }\n        return style.colors[0];\n    }\n\n    defaultCellFormatter(v, style) {\n        if (v === null || v === void 0 || v === undefined) {\n            return '';\n        }\n\n        if (_.isArray(v)) {\n            v = v.join(', ');\n        }\n\n        if (style && style.sanitize) {\n            return this.sanitize(v);\n        } else {\n            return _.escape(v);\n        }\n    }\n\n    createColumnFormatter(column) {\n        if (!column.style) {\n            return this.defaultCellFormatter;\n        }\n\n        if (column.style.type === 'hidden') {\n            return v => {\n                return undefined;\n            };\n        }\n\n        if (column.style.type === 'date') {\n            return v => {\n                if (v === undefined || v === null) {\n                    return '-';\n                }\n\n                if (_.isArray(v)) { v = v[0]; }\n                var date = moment(v);\n                if (this.isUtc) {\n                    date = date.utc();\n                }\n                return date.format(column.style.dateFormat);\n            };\n        }\n\n        if (column.style.type === 'string') {\n            return v =>  {\n                if (v === null) {\n                    return '-';\n                }\n\n                if (column.style.textMappings && column.style.colorMode) {\n                    for (let i = 0; i < column.style.textMappings.length; i++) {\n                        let mapping = column.style.textMappings[i];\n                        var regex = kbn.stringToJsRegex(mapping.text);\n                        if (v.match(regex)) {\n                            this.colorState[column.style.colorMode] = this.getColorForValue(mapping.value, column.style);\n                            break;\n                        }\n                    }\n                }\n\n                return this.defaultCellFormatter(v, column.style);\n            }\n        }\n\n        if (column.style.type === 'number') {\n            let valueFormatter = kbn.valueFormats[column.unit || column.style.unit];\n\n            return v =>  {\n                if (v === null || v === void 0) {\n                    return '-';\n                }\n\n                if (_.isString(v)) {\n                    return this.defaultCellFormatter(v, column.style);\n                }\n\n                if (column.style.colorMode) {\n                    this.colorState[column.style.colorMode] = this.getColorForValue(v, column.style);\n                }\n\n                return valueFormatter(v, column.style.decimals, null);\n            };\n        }\n\n        return (value) => {\n            return this.defaultCellFormatter(value, column.style);\n        };\n    }\n\n    renderRowVariables(rowIndex) {\n        let scopedVars = {};\n        let cell_variable;\n        let row = this.table.rows[rowIndex];\n        for (let i = 0; i < row.length; i++) {\n            cell_variable = `__cell_${i}`;\n            scopedVars[cell_variable] = { value: row[i] };\n        }\n        return scopedVars;\n    }\n\n    formatColumnValue(colIndex, value) {\n        return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n    }\n\n    renderCell(columnIndex, rowIndex, value, addWidthHack = false) {\n        value = this.formatColumnValue(columnIndex, value);\n\n        var column = this.table.columns[columnIndex];\n        var style = '';\n        var cellClasses = [];\n        var cellClass = '';\n\n        if (this.colorState.cell) {\n            style = ' style=\"background-color:' + this.colorState.cell + ';color: white\"';\n            this.colorState.cell = null;\n        } else if (this.colorState.value) {\n            style = ' style=\"color:' + this.colorState.value + '\"';\n            this.colorState.value = null;\n        }\n\n        // because of the fixed table headers css only solution\n        // there is an issue if header cell is wider the cell\n        // this hack adds header content to cell (not visible)\n        var columnHtml = '';\n        if (addWidthHack) {\n            columnHtml = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n        }\n\n        if (value === undefined) {\n            style = ' style=\"display:none;\"';\n            column.hidden = true;\n        } else {\n            column.hidden = false;\n        }\n\n        if (column.style && column.style.preserveFormat) {\n            cellClasses.push(\"table-panel-cell-pre\");\n        }\n\n        if (column.style && column.style.link) {\n            // Render cell as link\n            var scopedVars = this.renderRowVariables(rowIndex);\n            scopedVars['__cell'] = { value: value };\n\n            var cellLink = this.templateSrv.replace(column.style.linkUrl, scopedVars);\n            var cellLinkTooltip = this.templateSrv.replace(column.style.linkTooltip, scopedVars);\n            var cellTarget = column.style.linkTargetBlank ? '_blank' : '';\n\n            cellClasses.push(\"table-panel-cell-link\");\n            columnHtml += `\n        <a href=\"${cellLink}\" target=\"${cellTarget}\" data-link-tooltip data-original-title=\"${cellLinkTooltip}\" data-placement=\"right\">\n          ${value}\n        </a>\n      `;\n        } else {\n            columnHtml += value;\n        }\n\n        if (column.filterable) {\n            cellClasses.push(\"table-panel-cell-filterable\");\n            columnHtml += `\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter out value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"!=\">\n          <i class=\"fa fa-search-minus\"></i>\n        </a>\n        <a class=\"table-panel-filter-link\" data-link-tooltip data-original-title=\"Filter for value\" data-placement=\"bottom\"\n           data-row=\"${rowIndex}\" data-column=\"${columnIndex}\" data-operator=\"=\">\n          <i class=\"fa fa-search-plus\"></i>\n        </a>`;\n        }\n\n        if (cellClasses.length) {\n            cellClass = ' class=\"' + cellClasses.join(' ') + '\"';\n        }\n\n        columnHtml = '<td' + cellClass + style + '>' + columnHtml + '</td>';\n        return columnHtml;\n    }\n\n    render(page) {\n        if(this.panel) {\n            let pageSize = this.panel.pageSize || 100;\n            let startPos = page * pageSize;\n            let endPos = Math.min(startPos + pageSize, this.table.rows.length);\n            var html = \"\";\n\n            for (var y = startPos; y < endPos; y++) {\n                let row = this.table.rows[y];\n                let cellHtml = '';\n                let rowStyle = '';\n                for (var i = 0; i < this.table.columns.length; i++) {\n                    cellHtml += this.renderCell(i, y, row[i], y === startPos);\n                }\n\n                if (this.colorState.row) {\n                    rowStyle = ' style=\"background-color:' + this.colorState.row + ';color: white\"';\n                    this.colorState.row = null;\n                }\n\n                html += '<tr ' + rowStyle + '>' + cellHtml + '</tr>';\n            }\n        }\n        return html;\n    }\n\n    render_values() {\n        let rows = [];\n\n        for (var y = 0; y < this.table.rows.length; y++) {\n            let row = this.table.rows[y];\n            let new_row = [];\n            for (var i = 0; i < this.table.columns.length; i++) {\n                new_row.push(this.formatColumnValue(i, row[i]));\n            }\n            rows.push(new_row);\n        }\n        return {\n            columns: this.table.columns,\n            rows: rows,\n        };\n    }\n}"]}