{"version":3,"sources":["../../src/BasePanelTabCtrl.js"],"names":["queryTabDirective","vm","BasePanelTabCtrl","$scope","datasourceSrv","panelCtrl","ctrl","panel","dashboard","refreshMetadata","nextRefId","getNextQueryLetter","alias","updateMetadata","get","then","dataservice","getSources","dataspecType","sources","addQuery","isNew","refresh","targets","scopedVars","metrics","getMetrics","dd","hasRawData","rawData","rawDataAlias","removeAllQueries","namespace","restrict","scope","templateUrl","controller"],"mappings":";;;;;;;;;QA+EgBA,iB,GAAAA,iB;;AA/EhB;;;;AACA;;;;AACA;;;;;;AAEA,IAAIC,WAAJ;;IACaC,gB,WAAAA,gB;AAET,8BAAYC,MAAZ,EAAoBC,aAApB,EAAmC;AAAA;;AAC/B,aAAKC,SAAL,GAAiBF,OAAOG,IAAxB;AACAH,eAAOG,IAAP,GAAc,IAAd;;AAEA,aAAKC,KAAL,GAAa,KAAKF,SAAL,CAAeE,KAA5B;AACA,aAAKC,SAAL,GAAiB,KAAKH,SAAL,CAAeG,SAAhC;AACA,aAAKJ,aAAL,GAAqBA,aAArB;AACAH,aAAG,IAAH;AACA,aAAKQ,eAAL;AACA,aAAKJ,SAAL,CAAeK,SAAf,GAA2B,KAAKF,SAAL,CAAeG,kBAAf,CAAkC,KAAKJ,KAAvC,CAA3B;;AAEA,YAAG,KAAKA,KAAL,CAAWK,KAAd,EAAoB;AAChB,iBAAKC,cAAL,CAAoB,KAAKN,KAAL,CAAWK,KAA/B;AACH;AACJ;;;;0CAEgB;AACb,iBAAKR,aAAL,CAAmBU,GAAnB,GAAyBC,IAAzB,CAA8B,UAASC,WAAT,EAAqB;AAC/CA,4BAAYC,UAAZ,CAAuBhB,GAAGM,KAAH,CAASW,YAAhC,EAA8CH,IAA9C,CAAmD,UAASI,OAAT,EAAiB;AAChElB,uBAAGM,KAAH,CAASY,OAAT,GAAmBA,OAAnB;AACH,iBAFD;AAGH,aAJD;AAMH;;;mCAEU;AACP,iBAAKd,SAAL,CAAee,QAAf,CAAwB,EAACC,OAAO,IAAR,EAAxB;AACH;;;uCAGc;AACX,iBAAKhB,SAAL,CAAeiB,OAAf;AACH;;;2CAEiB;AACd,iBAAKf,KAAL,CAAWgB,OAAX,GAAqB,CAAC,EAAD,CAArB;AACA,iBAAKhB,KAAL,CAAWiB,UAAX,GAAwB,EAAxB;AACH;;;uCAEcZ,K,EAAM;AACjBX,eAAGG,aAAH,CAAiBU,GAAjB,GAAuBC,IAAvB,CAA4B,UAASC,WAAT,EAAqB;AAC7CA,4BAAYH,cAAZ,CAA2BD,KAA3B;AACH,aAFD;AAGH;;;6CAEoBA,K,EAAM;AACvB,gBAAGA,KAAH,EAAU;AACN,qBAAKC,cAAL,CAAoBD,KAApB;AACH;AACDX,eAAGG,aAAH,CAAiBU,GAAjB,GAAuBC,IAAvB,CAA4B,UAASC,WAAT,EAAqB;AAC7C,oBAAIS,UAAUT,YAAYU,UAAZ,EAAd;AACAzB,mBAAGM,KAAH,CAASoB,EAAT,GAAc,EAAd;AACA1B,mBAAGM,KAAH,CAASoB,EAAT,CAAYC,UAAZ,GAAyBH,QAAQI,OAAjC;AACA5B,mBAAGM,KAAH,CAASoB,EAAT,CAAYG,YAAZ,GAA2BL,QAAQK,YAAnC;AACH,aALD;;AAQA,iBAAKC,gBAAL;AACH;;;mCAEUC,S,EAAU;AACjB,gBAAG,CAAC/B,GAAGM,KAAH,CAASY,OAAb,EAAqB;AACjB,qBAAKV,eAAL;AACH;AACD,mBAAOR,GAAGM,KAAH,CAASY,OAAT,CAAiBa,SAAjB,CAAP;AACH;;;;;;AAOE,SAAShC,iBAAT,GAA6B;AAChC;;AACA,WAAO;AACHiC,kBAAU,GADP;AAEHC,eAAO,IAFJ;AAGHC,qBAAa,2BAHV;AAIHC,oBAAYlC;AAJT,KAAP;AAMH","file":"BasePanelTabCtrl.js","sourcesContent":["import _ from \"lodash\";\nimport kbn from \"app/core/utils/kbn\";\nimport './query-tab.css!'\n\nlet vm;\nexport class BasePanelTabCtrl  {\n\n    constructor($scope, datasourceSrv) {\n        this.panelCtrl = $scope.ctrl;\n        $scope.ctrl = this;\n\n        this.panel = this.panelCtrl.panel;\n        this.dashboard = this.panelCtrl.dashboard;\n        this.datasourceSrv = datasourceSrv;\n        vm=this;\n        this.refreshMetadata();\n        this.panelCtrl.nextRefId = this.dashboard.getNextQueryLetter(this.panel);\n        \n        if(this.panel.alias){\n            this.updateMetadata(this.panel.alias)\n        }\n    }\n    \n    refreshMetadata(){\n        this.datasourceSrv.get().then(function(dataservice){\n            dataservice.getSources(vm.panel.dataspecType).then(function(sources){\n                vm.panel.sources = sources\n            })\n        });\n        \n    }\n\n    addQuery() {\n        this.panelCtrl.addQuery({isNew: true});\n    }\n\n\n    refreshPanel() {\n        this.panelCtrl.refresh();\n    }\n\n    removeAllQueries(){\n        this.panel.targets = [{}]\n        this.panel.scopedVars = [];\n    }\n\n    updateMetadata(alias){\n        vm.datasourceSrv.get().then(function(dataservice){\n            dataservice.updateMetadata(alias)\n        });\n    }\n\n    refreshParamDropdown(alias){\n        if(alias) {\n            this.updateMetadata(alias);\n        }\n        vm.datasourceSrv.get().then(function(dataservice){\n            var metrics = dataservice.getMetrics();\n            vm.panel.dd = {};\n            vm.panel.dd.hasRawData = metrics.rawData;\n            vm.panel.dd.rawDataAlias = metrics.rawDataAlias;\n        });\n        \n        \n        this.removeAllQueries();\n    }\n\n    getAliases(namespace){\n        if(!vm.panel.sources){\n            this.refreshMetadata();\n        }\n        return vm.panel.sources[namespace]\n    }\n\n\n\n\n}\n\nexport function queryTabDirective() {\n    'use strict';\n    return {\n        restrict: 'E',\n        scope: true,\n        templateUrl: './partials/query_tab.html',\n        controller: BasePanelTabCtrl\n    };\n}"]}