{"version":3,"sources":["../../src/drilldown.js"],"names":["finraDrilldownDirective","$compile","controller","DrilldownController","controllerAs","scope","title","series","seriesx","seriesy","label","drilldownConfig","datasource","endpoint","templateUrl","link","elem","attrs","ctrl","container","find","table","$","header","panelHeader","footer","currentlyViewing","updateTableHeight","css","height","resizable","handles","resize","event","ui","left","top","classes","maxWidth","width","minHeight","maxHeight","disableIf","logic","buildPaginationButton","labelText","goToPage","appendPaginationControls","pageCount","Math","ceil","items","rowsPerPage","pages","footerElem","empty","lowerBound","pageIndex","upperBound","rows","length","expectedItems","receivedItems","error","VM","dashAlerts","list","push","startPage","max","endPage","min","paginationList","append","i","activeClass","disabled","pageLinkElem","$watch","newVal","oldVal","html","$scope","datasourceSrv","opened","sort","loading","getData","organizationContact","page","undefined","targets","field","value","sorting","columnTitle","get","then","dataservice","getOrganization","response","address","address1","name","query","alias","resp","clearAlerts","data","col","columns","desc","slice","colIndex"],"mappings":";;;;;;;;QAAgBA,uB,GAAAA,uB;;;;AAAT,SAASA,uBAAT,CAAiCC,QAAjC,EAA2C;AAC7C,WAAO;AACAC,oBAAYC,mBADZ;AAEAC,sBAAc,QAFd;AAGAC,eAAO;AACHC,mBAAO,GADJ;AAEHC,oBAAQ,GAFL;AAGHC,qBAAS,GAHN;AAIHC,qBAAS,GAJN;AAKHC,mBAAO,GALJ;AAMHC,6BAAiB,GANd;AAOHC,wBAAY,GAPT;AAQHC,sBAAU;AARP,SAHP;AAaAC,qBAAa,2BAbb;AAcAC,cAAM,cAAUV,KAAV,EAAiBW,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AACtC,gBAAIC,YAAYH,KAAKI,IAAL,CAAU,0BAAV,CAAhB;AACA,gBAAIC,QAAQC,EAAE,iBAAF,CAAZ;AACA,gBAAIC,SAASD,EAAE,uBAAF,CAAb;AACA,gBAAIE,cAAcF,EAAE,uBAAF,CAAlB;AACA,gBAAIG,SAASH,EAAE,uBAAF,CAAb;AACA,gBAAII,mBAAmBJ,EAAE,4BAAF,CAAvB;;AAEA,gBAAIhB,QAAQW,MAAMX,KAAlB;AACA,gBAAII,QAAQO,MAAMP,KAAlB;AACA,gBAAIH,SAASU,MAAMV,MAAnB;AACA,gBAAIC,UAAUS,MAAMT,OAApB;AACA,gBAAIC,UAAUQ,MAAMR,OAApB;AACA,gBAAIE,kBAAkBM,MAAMN,eAA5B;AACA,gBAAIC,aAAaK,MAAML,UAAvB;AACA,gBAAIC,WAAWI,MAAMJ,QAArB;;AAEA,gBAAIc,oBAAoB,SAApBA,iBAAoB,GAAM;AAC1BN,sBAAMO,GAAN,CAAU,EAACC,QAAQV,UAAUU,MAAV,KAAqBL,YAAYK,MAAZ,EAArB,GAA4CN,OAAOM,MAAP,EAA5C,GAA8DJ,OAAOI,MAAP,EAA9D,GAAgFH,iBAAiBG,MAAjB,EAAzF,EAAV;AACH,aAFD;;AAIAF;;AAEAR,sBAAUW,SAAV,CAAoB;AAChBC,yBAAS,GADO;AAEhBC,wBAAQ,gBAAUC,KAAV,EAAiBC,EAAjB,EAAqB;AACzBZ,sBAAE,IAAF,EAAQM,GAAR,CAAY,EAACO,MAAM,CAAP,EAAUC,KAAK,EAAf,EAAZ;AACAT;AACH,iBALe;AAMhBU,yBAAS;AACL,sCAAkB;AADb,iBANO;AAShBC,0BAAUnB,UAAUoB,KAAV,EATM;AAUhBC,2BAAW,GAVK;AAWhBC,2BAAW,IAXK,CAWA;AAXA,aAApB;;AAcA,gBAAIC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAW;AACvB,uBAAO,iBAAiBA,KAAxB;AACH,aAFD;;AAIA,gBAAIC,wBAAwB,SAAxBA,qBAAwB,CAACD,KAAD,EAAQE,SAAR,EAAmBC,QAAnB,EAAgC;AACxD,uBAAOxB,EAAE,qCAAqCwB,QAArC,GAAgD,0CAAhD,GAA6FJ,UAAUC,KAAV,CAA7F,GAAgH,IAAhH,GAAuHE,SAAvH,GAAmI,YAArI,CAAP;AACH,aAFD;;AAIA,gBAAIE,2BAA2B,SAA3BA,wBAA2B,CAACC,SAAD,EAAe;;AAE1C;AACAA,4BAAYC,KAAKC,IAAL,CAAUhC,KAAKG,KAAL,CAAW8B,KAAX,GAAmB9C,MAAMM,eAAN,CAAsByC,WAAnD,CAAZ;AACA,oBAAGJ,cAAc,CAAjB,EACIA,YAAY,CAAZ;;AAEJ9B,qBAAKG,KAAL,CAAWgC,KAAX,GAAmBL,SAAnB;;AAEA,oBAAIM,aAAatC,KAAKI,IAAL,CAAU,qBAAV,CAAjB;AACAkC,2BAAWC,KAAX;AACAlD,sBAAMmD,UAAN,GAAmBtC,KAAKuC,SAAL,GAAiBpD,MAAMM,eAAN,CAAsByC,WAAvC,GAAqD,CAAxE;AACA/C,sBAAMqD,UAAN,GAAmBxC,KAAKuC,SAAL,GAAiB,CAAjB,KAAuBvC,KAAKG,KAAL,CAAWgC,KAAlC,GAA0ChD,MAAMmD,UAAN,GAAmBtC,KAAKG,KAAL,CAAWsC,IAAX,CAAgBC,MAAnC,GAA4C,CAAtF,GAA0FvD,MAAMmD,UAAN,GAAmBnD,MAAMM,eAAN,CAAsByC,WAAzC,GAAuD,CAApK;;AAEA,oBAAIS,gBAAgB,CAAC3C,KAAKuC,SAAL,GAAiB,CAAlB,IAAuBpD,MAAMM,eAAN,CAAsByC,WAAjE;AACA,oBAAIU,gBAAgBzD,MAAMmD,UAAN,GAAmBtC,KAAKG,KAAL,CAAWsC,IAAX,CAAgBC,MAAnC,GAA4C,CAAhE;AACA,oBAAI1C,KAAKuC,SAAL,GAAiB,CAAjB,KAAuBvC,KAAKG,KAAL,CAAWgC,KAAlC,IAA4CS,kBAAkBD,aAAlE,EACA;AACI,wBAAIE,QAAQ,eAAe1D,MAAMM,eAAN,CAAsByC,WAArC,GAAmD,8BAAnD,GAAoFlC,KAAKG,KAAL,CAAWsC,IAAX,CAAgBC,MAApG,GAA6G,OAAzH;AACAI,uBAAGC,UAAH,CAAcC,IAAd,CAAmBC,IAAnB,CAAwB,EAAC,QAAQJ,KAAT,EAAxB;AACH;;AAED,oBAAG7C,KAAKuC,SAAL,GAAiB,CAAjB,KAAuBvC,KAAKG,KAAL,CAAWgC,KAAlC,IAA2CnC,KAAKuC,SAAL,IAAkB,CAA7D,IAAkEK,iBAAiB5C,KAAKG,KAAL,CAAW8B,KAAjG,EAAwG;AACpG,wBAAIY,SAAQ,0BAA0B7C,KAAKG,KAAL,CAAW8B,KAAX,IAAoB9C,MAAMmD,UAAN,GAAmB,CAAvC,CAA1B,IAAwE,qBAAxE,GAAgGtC,KAAKG,KAAL,CAAW8B,KAA3G,GAAmH,OAA/H;AACAa,uBAAGC,UAAH,CAAcC,IAAd,CAAmBC,IAAnB,CAAwB,EAAC,QAAQJ,MAAT,EAAxB;AACH;;AAED,oBAAG7C,KAAKuC,SAAL,GAAiB,CAAjB,KAAuBvC,KAAKG,KAAL,CAAWgC,KAAlC,IAA2CnC,KAAKuC,SAAL,IAAkB,CAA7D,IAAkEK,iBAAiB5C,KAAKG,KAAL,CAAW8B,KAAjG,EAAwG;AACpG,wBAAIY,UAAQ,eAAe7C,KAAKG,KAAL,CAAW8B,KAA1B,GAAkC,4BAAlC,GAAiEjC,KAAKG,KAAL,CAAWsC,IAAX,CAAgBC,MAAjF,GAA0F,QAAtG;AACAI,uBAAGC,UAAH,CAAcC,IAAd,CAAmBC,IAAnB,CAAwB,EAAC,QAAQJ,OAAT,EAAxB;AACH;;AAED,oBAAIf,cAAc,CAAlB,EAAqB;AACjB;AACH;;AAED,oBAAIoB,YAAYnB,KAAKoB,GAAL,CAASnD,KAAKuC,SAAL,GAAiB,CAA1B,EAA6B,CAA7B,CAAhB;AACA,oBAAIa,UAAWrB,KAAKsB,GAAL,CAASvB,SAAT,EAAoBoB,YAAY,CAAhC,CAAf;AACA,oBAAII,iBAAiBlD,EAAE,WAAF,CAArB;;AAEA;AACAkD,+BAAeC,MAAf,CAAsB7B,sBAAsB1B,KAAKuC,SAAL,KAAmB,CAAzC,EAA4C,IAA5C,EAAkD,CAAlD,CAAtB;AACAe,+BAAeC,MAAf,CAAsB7B,sBAAsB1B,KAAKuC,SAAL,KAAmB,CAAzC,EAA4C,GAA5C,EAAiDvC,KAAKuC,SAAL,GAAiB,CAAlE,CAAtB;;AAEA,qBAAK,IAAIiB,IAAIN,SAAb,EAAwBM,IAAIJ,OAA5B,EAAqCI,GAArC,EAA0C;AACtC,wBAAIC,cAAcD,MAAMxD,KAAKuC,SAAX,GAAuB,QAAvB,GAAkC,EAApD;AACA,wBAAImB,WAAWF,MAAMxD,KAAKuC,SAAX,GAAuB,oBAAvB,GAA8C,EAA7D;AACA,wBAAIoB,eAAevD,EAAE,qCAAqCoD,CAArC,GAAyC,0CAAzC,GAAsFC,WAAtF,GAAoG,IAApG,GAA2GC,QAA3G,GAAsH,GAAtH,IAA6HF,IAAI,CAAjI,IAAsI,WAAxI,CAAnB;AACAF,mCAAeC,MAAf,CAAsBI,YAAtB;AACH;;AAED;AACA,oBAAG3D,KAAKuC,SAAL,GAAiBT,SAApB,EACIwB,eAAeC,MAAf,CAAsB7B,sBAAsB1B,KAAKuC,SAAL,KAAmBT,YAAY,CAArD,EAAwD,GAAxD,EAA6D9B,KAAKuC,SAAL,GAAiB,CAA9E,CAAtB,EADJ,KAGIe,eAAeC,MAAf,CAAsB7B,sBAAsB1B,KAAKuC,SAAL,KAAmBT,YAAY,CAArD,EAAwD,GAAxD,EAA6DA,YAAW,CAAxE,CAAtB;;AAEJwB,+BAAeC,MAAf,CAAsB7B,sBAAsB1B,KAAKuC,SAAL,KAAmBT,YAAY,CAArD,EAAwD,IAAxD,EAA8DA,YAAY,CAA1E,CAAtB;;AAEAM,2BAAWmB,MAAX,CAAkBD,cAAlB;;AAEAvE,yBAASqD,UAAT,EAAqBjD,KAArB;AACAsB;AACH,aA/DD;;AAiEA;AACAtB,kBAAMyE,MAAN,CAAa,OAAb,EAAsB,YAAM;AACxB,oBAAI5D,KAAKG,KAAT,EAAgB;AACZ0B,6CAAyB7B,KAAKG,KAAL,CAAWgC,KAApC;AACH;AACJ,aAJD;;AAMAhD,kBAAMyE,MAAN,CAAa,QAAb,EAAuB,UAACC,MAAD,EAASC,MAAT,EAAoB;AACvC,oBAAI,CAACD,MAAL,EAAa;AACT/D,yBAAKiE,IAAL,CAAU,EAAV;AACH;AACJ,aAJD;AAMH;AAzID,KAAP;AA2IJ;;AAED,IAAIjB,WAAJ;;IACM7D,mB;AACF,iCAAY+E,MAAZ,EAAoBC,aAApB,EAAkC;AAAA;;AAE9BnB,aAAK,IAAL;AACAA,WAAGkB,MAAH,GAAYA,MAAZ;;AAEAA,eAAOE,MAAP,GAAgB,IAAhB;AACA,aAAK3B,SAAL,GAAiB,CAAjB;AACA,aAAK0B,aAAL,GAAqBA,aAArB;AACA,aAAKE,IAAL,GAAY,EAAZ;AACA,aAAKC,OAAL,GAAa,KAAb;AACA,aAAKC,OAAL,CAAa,CAAb;AACA,aAAKtB,UAAL,GAAkB,EAAlB;AACA,aAAKA,UAAL,CAAgBC,IAAhB,GAAuB,EAAvB;AACA,aAAKsB,mBAAL,GAA2B,WAA3B;AACH;;;;gCAEOC,I,EAAK;;AAET,gBAAGzB,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC,WAA1B,KAA0CsC,SAA7C,EACI1B,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC,WAA1B,GAAwC,EAAxC;;AAEJY,eAAGsB,OAAH,GAAW,IAAX;AACAtB,eAAG2B,OAAH,GAAa,EAAb;AACA3B,eAAG2B,OAAH,GAAa,CAAC;AACVC,uBAAO,MADG;AAEVC,uBAAOJ,OAAO;AAFJ,aAAD,EAGV;AACCG,uBAAO,aADR;AAECC,uBAAO7B,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC;AAFlC,aAHU,EAMV;AACCwC,uBAAO,UADR;AAECC,uBAAO7B,GAAGkB,MAAH,CAAUxE;AAFlB,aANU,CAAb;;AAWA,gBAAGsD,GAAGkB,MAAH,CAAU3E,MAAV,IAAoB,MAAvB,EACIyD,GAAG2B,OAAH,CAAWxB,IAAX,CAAgB;AACZyB,uBAAO,QADK;AAEZC,uBAAO7B,GAAGkB,MAAH,CAAU3E;AAFL,aAAhB;;AAKJ,gBAAGyD,GAAGkB,MAAH,CAAU1E,OAAV,IAAqBkF,SAAxB,EACI1B,GAAG2B,OAAH,CAAWxB,IAAX,CAAgB;AACZyB,uBAAO,SADK;AAEZC,uBAAO7B,GAAGkB,MAAH,CAAU1E;AAFL,aAAhB;;AAKJ,gBAAGwD,GAAGkB,MAAH,CAAUzE,OAAV,IAAqBiF,SAAxB,EACI1B,GAAG2B,OAAH,CAAWxB,IAAX,CAAgB;AACZyB,uBAAO,SADK;AAEZC,uBAAO7B,GAAGkB,MAAH,CAAUzE;AAFL,aAAhB;;AAKJ,gBAAGuD,GAAGkB,MAAH,CAAUY,OAAb,EACI9B,GAAG2B,OAAH,CAAWxB,IAAX,CAAgB;AACZyB,uBAAO,SADK;AAEZC,uBAAO7B,GAAGkB,MAAH,CAAUY;AAFL,aAAhB;;AAKJ,gBAAG9B,GAAGkB,MAAH,CAAUa,WAAb,EACI/B,GAAG2B,OAAH,CAAWxB,IAAX,CAAgB;AACZyB,uBAAO,aADK;AAEZC,uBAAO7B,GAAGkB,MAAH,CAAUa;AAFL,aAAhB;;AAKJ,iBAAKZ,aAAL,CAAmBa,GAAnB,GAAyBC,IAAzB,CAA8B,UAASC,WAAT,EAAqB;AAC/CA,4BAAYC,eAAZ,GAA8BF,IAA9B,CAAmC,UAACG,QAAD,EAAc;AAC7C,wBAAIA,aAAaV,SAAb,IAA0BU,aAAa,IAAvC,IAA+CA,SAASC,OAAT,KAAqB,IAAxE,EACIrC,GAAGwB,mBAAH,GAAyBY,SAASC,OAAT,CAAiBC,QAA1C;AACP,iBAHD,EAGG,UAACvC,KAAD,EAAW;AACNC,uBAAGwB,mBAAH,GAAyBY,SAASG,IAAT,GAAgB,YAAzC;AACP,iBALD;;AAOAL,4BAAYM,KAAZ,CAAkB;AACdC,2BAAOzC,GAAGkB,MAAH,CAAUrE,QADH;AAEd8E,6BAAS3B,GAAG2B;AAFE,iBAAlB,EAGGM,IAHH,CAGQ,UAACS,IAAD,EAAU;AACd1C,uBAAG2C,WAAH;AACA3C,uBAAG3C,KAAH,GAAWqF,KAAKE,IAAhB;AACA5C,uBAAGkB,MAAH,CAAU7D,KAAV,GAAkB2C,GAAG3C,KAArB;AACA2C,uBAAGP,SAAH,GAAegC,IAAf;AACA,wBAAIzB,GAAGqB,IAAH,CAAQwB,GAAZ,EAAiB;AACb7C,2BAAG3C,KAAH,CAASyF,OAAT,CAAiB9C,GAAGqB,IAAH,CAAQwB,GAAzB,EAA8BxB,IAA9B,GAAqC,IAArC;AACArB,2BAAG3C,KAAH,CAASyF,OAAT,CAAiB9C,GAAGqB,IAAH,CAAQwB,GAAzB,EAA8BE,IAA9B,GAAqC/C,GAAGqB,IAAH,CAAQ0B,IAA7C;AACH;;AAED,wBAAIL,KAAKE,IAAL,CAAUzD,KAAV,GAAkB,CAAtB,EAAyB;AACrB,4BAAIY,QAAQ,wCAAZ;AACAC,2BAAGC,UAAH,CAAcC,IAAd,CAAmBC,IAAnB,CAAwB,EAAC,QAAQJ,KAAT,EAAxB;AACH;;AAED;AACA,wBAAI2C,KAAKE,IAAL,CAAUjD,IAAV,IAAkBK,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC,WAA1B,GAAwCsD,KAAKE,IAAL,CAAUjD,IAAV,CAAeC,MAA7E,EAAqF;AACjF,4BAAIG,UAAQ,eAAeC,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC,WAAzC,GAAuD,8BAAvD,GAAwFsD,KAAKE,IAAL,CAAUjD,IAAV,CAAeC,MAAvG,GAAgH,OAA5H;AACAI,2BAAGC,UAAH,CAAcC,IAAd,CAAmBC,IAAnB,CAAwB,EAAC,QAAQJ,OAAT,EAAxB;AACA2C,6BAAKE,IAAL,CAAUjD,IAAV,GAAiB+C,KAAKE,IAAL,CAAUjD,IAAV,CAAeqD,KAAf,CAAqB,CAArB,EAAwBhD,GAAGkB,MAAH,CAAUvE,eAAV,CAA0ByC,WAAlD,CAAjB;AACH;;AAEDY,uBAAGsB,OAAH,GAAW,KAAX;AACH,iBA1BD;AA2BH,aAnCD;AAoCH;;;uCAEcuB,G,EAAK;AAChB,mBAAOA,IAAIxB,IAAX;AACH;;;yCAEgBwB,G,EAAKI,Q,EAAS;AAC3B;AACA,gBAAIjD,GAAG3C,KAAH,CAASyF,OAAT,CAAiB9C,GAAGqB,IAAH,CAAQwB,GAAzB,CAAJ,EAAmC;AAC/B7C,mBAAG3C,KAAH,CAASyF,OAAT,CAAiB9C,GAAGqB,IAAH,CAAQwB,GAAzB,EAA8BxB,IAA9B,GAAqC,KAArC;AACAwB,oBAAIxB,IAAJ,GAAW,KAAX;AACH;;AAED,gBAAIrB,GAAGqB,IAAH,CAAQwB,GAAR,KAAgBI,QAApB,EAA8B;AAC1B,oBAAIjD,GAAGqB,IAAH,CAAQ0B,IAAZ,EAAkB;AACd/C,uBAAGqB,IAAH,CAAQ0B,IAAR,GAAe,KAAf;AACAF,wBAAIE,IAAJ,GAAW,KAAX;AACAF,wBAAIxB,IAAJ,GAAW,IAAX;AACH,iBAJD,MAIO;AACHrB,uBAAGqB,IAAH,CAAQwB,GAAR,GAAc,IAAd;AACA7C,uBAAGqB,IAAH,CAAQ0B,IAAR,GAAe,IAAf;AACH;AACJ,aATD,MASO;AACH/C,mBAAGqB,IAAH,CAAQwB,GAAR,GAAcI,QAAd;AACAjD,mBAAGqB,IAAH,CAAQ0B,IAAR,GAAe,IAAf;AACAF,oBAAIxB,IAAJ,GAAW,IAAX;AACAwB,oBAAIE,IAAJ,GAAW,IAAX;AACH;;AAED/C,eAAGkB,MAAH,CAAUY,OAAV,GAAoB,MAApB;AACA,gBAAGe,IAAIxB,IAAP,EAAa;AACT,oBAAGwB,IAAIE,IAAP,EAAa;AACT/C,uBAAGkB,MAAH,CAAUY,OAAV,GAAoB,YAApB;AACH,iBAFD,MAEO;AACH9B,uBAAGkB,MAAH,CAAUY,OAAV,GAAoB,WAApB;AACH;AACJ;;AAED9B,eAAGkB,MAAH,CAAUa,WAAV,GAAwBc,IAAIvG,KAA5B;;AAEA,iBAAKiF,OAAL,CAAavB,GAAGP,SAAhB;AACH;;;wCAEc;AACXO,eAAGkB,MAAH,CAAUE,MAAV,GAAmB,KAAnB;AACH;;;sCAEY;AACTpB,eAAGC,UAAH,CAAcC,IAAd,GAAqB,EAArB;AACH","file":"drilldown.js","sourcesContent":["export function finraDrilldownDirective($compile) {\n     return {\n            controller: DrilldownController,\n            controllerAs: 'ddCtrl',\n            scope: {\n                title: \"@\",\n                series: '@',\n                seriesx: '@',\n                seriesy: '@',\n                label: \"@\",\n                drilldownConfig: \"=\",\n                datasource: \"=\",\n                endpoint: \"@\"\n            },\n            templateUrl: './partials/drilldown.html',\n            link: function (scope, elem, attrs, ctrl) {\n                let container = elem.find(\"#drilldownPanelContainer\");\n                let table = $('#drilldownTable');\n                let header = $('#drilldownTableHeader');\n                let panelHeader = $('#drilldownPanelHeader');\n                let footer = $('#drilldownTableFooter');\n                let currentlyViewing = $('#drilldownCurrentlyViewing');\n\n                let title = attrs.title;\n                let label = attrs.label;\n                let series = attrs.series;\n                let seriesx = attrs.seriesx;\n                let seriesy = attrs.seriesy;\n                let drilldownConfig = attrs.drilldownConfig;\n                let datasource = attrs.datasource;\n                let endpoint = attrs.endpoint;\n\n                let updateTableHeight = () => {\n                    table.css({height: container.height() - panelHeader.height() - header.height() - footer.height() - currentlyViewing.height()})\n                };\n\n                updateTableHeight();\n\n                container.resizable({\n                    handles: \"n\",\n                    resize: function (event, ui) {\n                        $(this).css({left: 0, top: ''});\n                        updateTableHeight();\n                    },\n                    classes: {\n                        \"ui-resizable-n\": \"drilldown-n\",\n                    },\n                    maxWidth: container.width(),\n                    minHeight: 250,\n                    maxHeight: 1000 //straighten out this logic.\n                });\n\n                let disableIf = (logic) => {\n                    return \"ng-disabled=\" + logic\n                };\n\n                let buildPaginationButton = (logic, labelText, goToPage) => {\n                    return $('<li><a ng-click=\"ddCtrl.getData(' + goToPage + ')\" class=\"table-panel-page-link pointer\"' + disableIf(logic) + '> ' + labelText + ' </a></li>')\n                };\n\n                let appendPaginationControls = (pageCount) => {\n\n                    // Calculate number of pages\n                    pageCount = Math.ceil(ctrl.table.items / scope.drilldownConfig.rowsPerPage);\n                    if(pageCount === 0)\n                        pageCount = 1;\n\n                    ctrl.table.pages = pageCount;\n                    \n                    let footerElem = elem.find('.table-panel-footer');\n                    footerElem.empty();\n                    scope.lowerBound = ctrl.pageIndex * scope.drilldownConfig.rowsPerPage + 1;\n                    scope.upperBound = ctrl.pageIndex + 1 === ctrl.table.pages ? scope.lowerBound + ctrl.table.rows.length - 1 : scope.lowerBound + scope.drilldownConfig.rowsPerPage - 1;\n\n                    let expectedItems = (ctrl.pageIndex + 1) * scope.drilldownConfig.rowsPerPage;\n                    let receivedItems = scope.lowerBound + ctrl.table.rows.length - 1;\n                    if (ctrl.pageIndex + 1 !== ctrl.table.pages  && receivedItems !== expectedItems)\n                    {\n                        let error = \"Expecting \" + scope.drilldownConfig.rowsPerPage + \" rows per page but received \" + ctrl.table.rows.length + \" rows\";\n                        VM.dashAlerts.list.push({\"text\": error});\n                    }\n\n                    if(ctrl.pageIndex + 1 === ctrl.table.pages && ctrl.pageIndex != 0 && receivedItems != ctrl.table.items) {\n                        let error = \"Last Page expecting \" + (ctrl.table.items - (scope.lowerBound - 1) ) + \" rows but received \" + ctrl.table.items + \" rows\";\n                        VM.dashAlerts.list.push({\"text\": error});\n                    }\n\n                    if(ctrl.pageIndex + 1 === ctrl.table.pages && ctrl.pageIndex == 0 && receivedItems != ctrl.table.items) {\n                        let error = \"Expecting \" + ctrl.table.items + \" total items but received \" + ctrl.table.rows.length + \" items\";\n                        VM.dashAlerts.list.push({\"text\": error});\n                    }\n\n                    if (pageCount === 1) {\n                        return;\n                    }\n\n                    let startPage = Math.max(ctrl.pageIndex - 3, 0);\n                    let endPage =  Math.min(pageCount, startPage + 9);\n                    let paginationList = $('<ul></ul>');\n\n                    //appending the go to first + the go back 10 pages handles\n                    paginationList.append(buildPaginationButton(ctrl.pageIndex === 0, '<<', 0));\n                    paginationList.append(buildPaginationButton(ctrl.pageIndex === 0, '<', ctrl.pageIndex - 1));\n\n                    for (let i = startPage; i < endPage; i++) {\n                        let activeClass = i === ctrl.pageIndex ? 'active' : '';\n                        let disabled = i === ctrl.pageIndex ? 'ng-disabled=\"true\"' : '';\n                        let pageLinkElem = $('<li><a ng-click=\"ddCtrl.getData(' + i + ')\" class=\"table-panel-page-link pointer ' + activeClass + '\" ' + disabled + '>' + (i + 1) + '</a></li>');\n                        paginationList.append(pageLinkElem);\n                    }\n\n                    //appending the skip 10 + the go to last page handles\n                    if(ctrl.pageIndex < pageCount)\n                        paginationList.append(buildPaginationButton(ctrl.pageIndex === pageCount - 1, '>', ctrl.pageIndex + 1));\n                    else\n                        paginationList.append(buildPaginationButton(ctrl.pageIndex === pageCount - 1, '>', pageCount -1));\n\n                    paginationList.append(buildPaginationButton(ctrl.pageIndex === pageCount - 1, '>>', pageCount - 1));\n\n                    footerElem.append(paginationList);\n\n                    $compile(footerElem)(scope);\n                    updateTableHeight();\n                };\n\n                //Re-generate the values everytime something about the table changes (generally a user clicking a new page)\n                scope.$watch(\"table\", () => {\n                    if (ctrl.table) {\n                        appendPaginationControls(ctrl.table.pages);\n                    }\n                });\n\n                scope.$watch(\"opened\", (newVal, oldVal) => {\n                    if (!newVal) {\n                        elem.html(\"\");\n                    }\n                });\n\n            }\n        }\n}\n\nlet VM;\nclass DrilldownController {\n    constructor($scope, datasourceSrv){\n\n        VM = this;\n        VM.$scope = $scope;\n\n        $scope.opened = true;\n        this.pageIndex = 0;\n        this.datasourceSrv = datasourceSrv;\n        this.sort = {};\n        this.loading=false;\n        this.getData(0);\n        this.dashAlerts = {};\n        this.dashAlerts.list = [];\n        this.organizationContact = \"API admin\";\n    }\n\n    getData(page){\n\n        if(VM.$scope.drilldownConfig.rowsPerPage === undefined)\n            VM.$scope.drilldownConfig.rowsPerPage = 10;\n\n        VM.loading=true;\n        VM.targets = {};\n        VM.targets = [{\n            field: \"page\",\n            value: page + 1\n        }, {\n            field: \"rowsPerPage\",\n            value: VM.$scope.drilldownConfig.rowsPerPage\n        }, {\n            field: \"selected\",\n            value: VM.$scope.label\n        }];\n\n        if(VM.$scope.series != \"null\")\n            VM.targets.push({\n                field: \"series\",\n                value: VM.$scope.series\n            });\n\n        if(VM.$scope.seriesx != undefined)\n            VM.targets.push({\n                field: \"seriesX\",\n                value: VM.$scope.seriesx\n            });\n\n        if(VM.$scope.seriesy != undefined)\n            VM.targets.push({\n                field: \"seriesY\",\n                value: VM.$scope.seriesy\n            });\n\n        if(VM.$scope.sorting)\n            VM.targets.push({\n                field: \"sorting\",\n                value: VM.$scope.sorting\n             });\n\n        if(VM.$scope.columnTitle)\n            VM.targets.push({\n                field: \"columnTitle\",\n                value: VM.$scope.columnTitle\n            });\n\n        this.datasourceSrv.get().then(function(dataservice){\n            dataservice.getOrganization().then((response) => {\n                if (response !== undefined && response !== null && response.address !== null)\n                    VM.organizationContact = response.address.address1;\n            }, (error) => {\n                    VM.organizationContact = response.name + \" API admin\";\n            });\n\n            dataservice.query({\n                alias: VM.$scope.endpoint,\n                targets: VM.targets\n            }).then((resp) => {\n                VM.clearAlerts();\n                VM.table = resp.data;\n                VM.$scope.table = VM.table;\n                VM.pageIndex = page;\n                if (VM.sort.col) {\n                    VM.table.columns[VM.sort.col].sort = true;\n                    VM.table.columns[VM.sort.col].desc = VM.sort.desc\n                }\n\n                if (resp.data.items < 1) {\n                    let error = \"DrillDown numberOfItems is less than 1\";\n                    VM.dashAlerts.list.push({\"text\": error});\n                }\n\n                // Truncate extra rows if more rows returned than rowsPerPage\n                if (resp.data.rows && VM.$scope.drilldownConfig.rowsPerPage < resp.data.rows.length) {\n                    let error = \"Expecting \" + VM.$scope.drilldownConfig.rowsPerPage + \" rows per page but received \" + resp.data.rows.length + \" rows\";\n                    VM.dashAlerts.list.push({\"text\": error});\n                    resp.data.rows = resp.data.rows.slice(0, VM.$scope.drilldownConfig.rowsPerPage);\n                }\n\n                VM.loading=false;\n            });\n        });\n    }\n\n    getSortingFlag(col) {\n        return col.sort;\n    }\n\n    toggleColumnSort(col, colIndex){\n        // remove sort flag from current column\n        if (VM.table.columns[VM.sort.col]) {\n            VM.table.columns[VM.sort.col].sort = false;\n            col.sort = false;\n        }\n\n        if (VM.sort.col === colIndex) {\n            if (VM.sort.desc) {\n                VM.sort.desc = false;\n                col.desc = false;\n                col.sort = true;\n            } else {\n                VM.sort.col = null;\n                VM.sort.desc = null;\n            }\n        } else {\n            VM.sort.col = colIndex;\n            VM.sort.desc = true;\n            col.sort = true;\n            col.desc = true;\n        }\n\n        VM.$scope.sorting = \"none\";\n        if(col.sort) {\n            if(col.desc) {\n                VM.$scope.sorting = \"descending\";\n            } else {\n                VM.$scope.sorting = \"ascending\";\n            }\n        }\n\n        VM.$scope.columnTitle = col.title;\n\n        this.getData(VM.pageIndex);\n    }\n\n    exitDrillDown(){\n        VM.$scope.opened = false;\n    }\n\n    clearAlerts(){\n        VM.dashAlerts.list = [];\n    }\n}"]}